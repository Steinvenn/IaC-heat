heat_template_version: 2013-05-23

description: >
  HOT template to create a new neutron network plus a router to the public
  network, and for deploying three servers into the new network. The template also
  assigns floating IP addresses to each server so they are routable from the
  public network. This creates the basic borg.trek infrastructure with a 
  manager (Ubuntu), a monitor (Ubuntu) and a DNS server (Windows Server)

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
  name_lin1:
    type: string
    description: Name of linux server
    default: manager
  image_lin1:
    type: string
    description: Name of image to use for servers
    default: Ubuntu Server 16.04 LTS (Xenial Xerus) amd64
  flavor_lin1:
    type: string
    description: Flavor to use for servers
    default: m1.medium
  name_lin2:
    type: string
    description: Name of linux server
    default: monitor
  image_lin2:
    type: string
    description: Name of image to use for servers
    default: Ubuntu Server 16.04 LTS (Xenial Xerus) amd64
  flavor_lin2:
    type: string
    description: Flavor to use for servers
    default: m1.large
  name_win:
    type: string
    description: Name of windows server
    default: dir01
  image_win:
    type: string
    description: Name of image to use for servers
    default: Windows Server 2016 Std Eval
  flavor_win:
    type: string
    description: Flavor to use for servers
    default: m1.large
  public_net:
    type: string
    description: >
      ID or name of public network for which floating IP addresses will be allocated
  admin_net_name:
    type: string
    description: Name of admin network to be created
    default: imt3005_admin_net
  admin_net_cidr:
    type: string
    description: Admin network address (CIDR notation)
    default: 192.168.180.0/24
  admin_net_gateway:
    type: string
    description: Admin network gateway address
    default: 192.168.180.1
  admin_net_pool_start:
    type: string
    description: Start of admin network IP address allocation pool
    default: 192.168.180.100
  admin_net_pool_end:
    type: string
    description: End of admin network IP address allocation pool
    default: 192.168.180.199
  internal_net_name:
    type: string
    description: Name of internal network to be created
    default: imt3005_internal_net
  internal_net_cidr:
    type: string
    description: Internal network address (CIDR notation)
    default: 192.168.190.0/24
  internal_net_gateway:
    type: string
    description: Internal network gateway address
    default: 192.168.190.1
  internal_net_pool_start:
    type: string
    description: Start of admin network IP address allocation pool
    default: 192.168.190.100
  internal_net_pool_end:
    type: string
    description: End of internal network IP address allocation pool
    default: 192.168.190.199
  sec_group_lin:
    type: comma_delimited_list
    description: Security groups
  sec_group_win:
    type: comma_delimited_list
    description: Security groups

resources:
  admin_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: admin_net_name }

  admin_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: admin_net }
      cidr: { get_param: admin_net_cidr }
      gateway_ip: { get_param: admin_net_gateway }
      allocation_pools:
        - start: { get_param: admin_net_pool_start }
          end: { get_param: admin_net_pool_end }

  internal_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: internal_net_name }

  internal_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: internal_net }
      cidr: { get_param: internal_net_cidr }
      gateway_ip: { get_param: internal_net_gateway }
      allocation_pools:
        - start: { get_param: internal_net_pool_start }
          end: { get_param: internal_net_pool_end }


  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }

  router_interface_admin:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: admin_subnet }

  router_interface_internal:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: internal_subnet }


  server1:
    type: OS::Nova::Server
    properties:
      name: { get_param: name_lin1 }
      image: { get_param: image_lin1 }
      flavor: { get_param: flavor_lin1 }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server1_port }

  server1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: admin_net }
      security_groups: { get_param: sec_group_lin }
      fixed_ips:
        - subnet_id: { get_resource: admin_subnet }

  server1_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: server1_port }

  server3:
    type: OS::Nova::Server
    properties:
      name: { get_param: name_lin2 }
      image: { get_param: image_lin2 }
      flavor: { get_param: flavor_lin2 }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server3_port }

  server3_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: admin_net }
      security_groups: { get_param: sec_group_lin }
      fixed_ips:
        - subnet_id: { get_resource: admin_subnet }

  server3_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: server3_port }

  server2:
    type: OS::Nova::Server
    properties:
      name: { get_param: name_win }
      image: { get_param: image_win }
      flavor: { get_param: flavor_win }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server2_port_internal }
        - port: { get_resource: server2_port_admin }

  server2_port_admin:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: admin_net }
      security_groups: { get_param: sec_group_win }
      fixed_ips:
        - subnet_id: { get_resource: admin_subnet }

  server2_port_internal:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: internal_net }
      security_groups: { get_param: sec_group_win }
      fixed_ips:
        - subnet_id: { get_resource: internal_subnet }

  server2_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: server2_port_internal }

outputs:
  server1_admin_ip:
    description: IP address of server1 in admin network
    value: { get_attr: [ server1, first_address ] }
  server1_public_ip:
    description: Floating IP address of server1 in public network
    value: { get_attr: [ server1_floating_ip, floating_ip_address ] }
  server2_admin_ip:
    description: IP address of server2 in admin network
    value: { get_attr: [ server2, first_address ] }
  server2_public_ip:
    description: Floating IP address of server2 in public network
    value: { get_attr: [ server2_floating_ip, floating_ip_address ] }
  server3_admin_ip:
    description: IP address of server3 in admin network
    value: { get_attr: [ server3, first_address ] }
  server3_public_ip:
    description: Floating IP address of server3 in public network
    value: { get_attr: [ server3_floating_ip, floating_ip_address ] }
